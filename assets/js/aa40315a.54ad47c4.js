"use strict";(self.webpackChunk_olmokit_docs=self.webpackChunk_olmokit_docs||[]).push([[468],{7522:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>h});var r=a(9901);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=r.createContext({}),d=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=d(a),u=o,h=m["".concat(c,".").concat(u)]||m[u]||p[u]||n;return a?r.createElement(h,l(l({ref:t},s),{},{components:a})):r.createElement(h,l({ref:t},s))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,l=new Array(n);l[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:o,l[1]=i;for(var d=2;d<n;d++)l[d]=a[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3241:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var r=a(3027),o=(a(9901),a(7522));const n={title:"Cache"},l=void 0,i={unversionedId:"laravel-frontend/Cache",id:"laravel-frontend/Cache",title:"Cache",description:"Frontend cache is tagged with swayok/alternative-laravel-cache according to the following tree structure:",source:"@site/docs/laravel-frontend/Cache.md",sourceDirName:"laravel-frontend",slug:"/laravel-frontend/Cache",permalink:"/olmokit/laravel-frontend/Cache",draft:!1,editUrl:"https://github.com/olmokit/olmokit/tree/main/apps/docs/docs/docs/laravel-frontend/Cache.md",tags:[],version:"current",frontMatter:{title:"Cache"},sidebar:"docs",previous:{title:"Auth",permalink:"/olmokit/laravel-frontend/Auth"},next:{title:"Cms",permalink:"/olmokit/laravel-frontend/Cms"}},c={},d=[{value:"<code>data</code>",id:"data",level:3},{value:"<code>structure</code>",id:"structure",level:3},{value:"<code>custom</code>",id:"custom",level:3},{value:"<code>models</code>",id:"models",level:3},{value:"<code>models.{modelName}</code>",id:"modelsmodelname",level:3},{value:"<code>routes</code>",id:"routes",level:3},{value:"<code>routes.{routeId}</code>",id:"routesrouteid",level:3},{value:"<code>forms</code>",id:"forms",level:3},{value:"<code>forms.{formId}</code>",id:"formsformid",level:3},{value:"<code>img</code>",id:"img",level:3}],s={toc:d},m="wrapper";function p(e){let{components:t,...a}=e;return(0,o.kt)(m,(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Frontend cache is tagged with ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/swayok/alternative-laravel-cache"},"swayok/alternative-laravel-cache")," according to the following tree structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 structure\n\u2502   \u251c\u2500\u2500 custom\n\u2502   \u251c\u2500\u2500 models\n|   |   \u2514\u2500\u2500 {modelName}\n\u2502   \u251c\u2500\u2500 routes\n|   |   \u2514\u2500\u2500 {routeId}\n\u2502   \u2514\u2500\u2500 forms\n|       \u2514\u2500\u2500 {formId}\n\u2514\u2500\u2500 img\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"When a ",(0,o.kt)("em",{parentName:"p"},"parent")," tag is ",(0,o.kt)("strong",{parentName:"p"},"deleted")," all its ",(0,o.kt)("em",{parentName:"p"},"children")," are ",(0,o.kt)("strong",{parentName:"p"},"deleted too"),".")),(0,o.kt)("p",null,"Here is a breakdown of the various cache tags. For testing or other purposes you can manage these tags from the CLI, for instance to clear a particular tags' cache with ",(0,o.kt)("inlineCode",{parentName:"p"},"php artisan cacher:clear {tag}")," e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan cacher:clear models.product\n")),(0,o.kt)("h3",{id:"data"},(0,o.kt)("inlineCode",{parentName:"h3"},"data")),(0,o.kt)("p",null,"Applied to all the caches that contain data from standardised external sources, for instance the CMS api that feeds the routes and custom endpoints, the form manager, etc."),(0,o.kt)("h3",{id:"structure"},(0,o.kt)("inlineCode",{parentName:"h3"},"structure")),(0,o.kt)("p",null,"It tags the data related to the structure of the frontend, for instance the routes mapping and resolutions in their relation to frontend templates."),(0,o.kt)("h3",{id:"custom"},(0,o.kt)("inlineCode",{parentName:"h3"},"custom")),(0,o.kt)("p",null,'All data retrieved "manually" in the frontend application, for instance the data retrieved with explicit calls of the ',(0,o.kt)("a",{parentName:"p",href:"/olmokit/laravel-frontend/Cms#cms-api-get-data"},(0,o.kt)("inlineCode",{parentName:"a"},"CmsApi::getData"))," and ",(0,o.kt)("a",{parentName:"p",href:"/olmokit/laravel-frontend/Cms#cms-api-post-data"},(0,o.kt)("inlineCode",{parentName:"a"},"CmsApi::postData"))," methods."),(0,o.kt)("h3",{id:"models"},(0,o.kt)("inlineCode",{parentName:"h3"},"models")),(0,o.kt)("p",null,"It tags all the caches produced by calls of the method ",(0,o.kt)("a",{parentName:"p",href:"/olmokit/laravel-frontend/Cms#cms-api-get-all-models"},(0,o.kt)("inlineCode",{parentName:"a"},"CmsApi::getAllModels")),"."),(0,o.kt)("h3",{id:"modelsmodelname"},(0,o.kt)("inlineCode",{parentName:"h3"},"models.{modelName}")),(0,o.kt)("p",null,"It tags all the cache produced by calls of the method ",(0,o.kt)("a",{parentName:"p",href:"/olmokit/laravel-frontend/Cms#cms-api-get-all-models"},(0,o.kt)("inlineCode",{parentName:"a"},"CmsApi::getAllModels"))," that matches a specific ",(0,o.kt)("inlineCode",{parentName:"p"},"modelName"),"."),(0,o.kt)("h3",{id:"routes"},(0,o.kt)("inlineCode",{parentName:"h3"},"routes")),(0,o.kt)("p",null,"It tags all the route specific caches created automatically by the ",(0,o.kt)("a",{parentName:"p",href:"/olmokit/laravel-frontend/Cms#route-s-base-controller"},"route's Base controller")," associated to each route."),(0,o.kt)("h3",{id:"routesrouteid"},(0,o.kt)("inlineCode",{parentName:"h3"},"routes.{routeId}")),(0,o.kt)("p",null,"It tags the route cache created automatically by the ",(0,o.kt)("a",{parentName:"p",href:"/olmokit/laravel-frontend/Cms#route-s-base-controller"},"route's Base controller")," that matches a specific ",(0,o.kt)("inlineCode",{parentName:"p"},"routeId")," (or template name or route's template, they are all the same frontend side)."),(0,o.kt)("h3",{id:"forms"},(0,o.kt)("inlineCode",{parentName:"h3"},"forms")),(0,o.kt)("p",null,"It tags all the forms specific caches created either by the internal Form manager or an external one (like Olmoforms)."),(0,o.kt)("h3",{id:"formsformid"},(0,o.kt)("inlineCode",{parentName:"h3"},"forms.{formId}")),(0,o.kt)("p",null,"It tags the forms specific caches created either by the internal Form manager or an external one (like Olmoforms) that matches a specific ",(0,o.kt)("inlineCode",{parentName:"p"},"formId"),"."),(0,o.kt)("h3",{id:"img"},(0,o.kt)("inlineCode",{parentName:"h3"},"img")),(0,o.kt)("p",null,"Tag that identifies all images and their associated metadata produced by the frontend ",(0,o.kt)("a",{parentName:"p",href:"/olmokit/laravel-frontend/Img"},"Image")," processor."))}p.isMDXComponent=!0}}]);